<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>toto</groupId>
	<artifactId>toto-spring</artifactId>
	<version>${proj.version}${build.number}</version>
	<packaging>jar</packaging>

	<name>toto-spring</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<build.number>SNAPSHOT</build.number>
		<proj.version>0.0.1-</proj.version>
		<spring.version>3.2.16.RELEASE</spring.version>
		<project.build.jdkVersion>1.6</project.build.jdkVersion>
		<version.aspectj-maven-plugin>1.7</version.aspectj-maven-plugin>
		<version.aspectjrt>1.8.8</version.aspectjrt>
		<version.aspectjweaver>1.8.8</version.aspectjweaver>
		<version.aspectjtools>1.8.8</version.aspectjtools>

	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>

				<configuration>
					<source>${project.build.jdkVersion}</source>
					<target>${project.build.jdkVersion}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>${version.aspectj-maven-plugin}</version>
				<configuration>
					<source>${project.build.jdkVersion}</source>
					<target>${project.build.jdkVersion}</target>
					<complianceLevel>${project.build.jdkVersion}</complianceLevel>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.springframework</groupId>
							<artifactId>spring-aspects</artifactId>
						</aspectLibrary>
					</aspectLibraries>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.plexus</groupId>
						<artifactId>plexus-utils</artifactId>
						<version>3.0.21</version>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${version.aspectjtools}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>javax.cache</groupId>
			<artifactId>cache-api</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${version.aspectjrt}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${version.aspectjweaver}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-instrument</artifactId> 
			<version>${spring.version}</version> </dependency> -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>1.7.10</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8.8</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<!-- <profile> <id>nodep</id> <activation> <activeByDefault>false</activeByDefault> 
			</activation> <properties> </properties> </profile> -->
		<profile>
			<id>dep</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>

				<!-- -->
				<version.maven-antrun-plugin>1.7</version.maven-antrun-plugin>
				<version.maven-assembly-plugin>2.3</version.maven-assembly-plugin>
				<version.maven-clean-plugin>2.4.1</version.maven-clean-plugin>
				<version.maven-dependency-plugin>2.4</version.maven-dependency-plugin>
				<version.maven-deploy-plugin>2.7</version.maven-deploy-plugin>
				<version.maven-install-plugin>2.3.1</version.maven-install-plugin>
				<version.maven-release-plugin>2.2.2</version.maven-release-plugin>
				<version.maven-site-plugin>3.0</version.maven-site-plugin>

				<version.maven-compiler-plugin>2.3.2</version.maven-compiler-plugin>
				<version.maven-ear-plugin>2.7</version.maven-ear-plugin>
				<version.maven-war-plugin>2.1.1</version.maven-war-plugin>
				<version.maven-jar-plugin>2.4</version.maven-jar-plugin>
				<version.maven-eclipse-plugin>2.9</version.maven-eclipse-plugin>
				<version.maven-resources-plugin>2.5</version.maven-resources-plugin>
				<version.maven-surefire-plugin>2.12</version.maven-surefire-plugin>
				<version.maven-enforcer-plugin>1.0.1</version.maven-enforcer-plugin>
			<!---->

			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-antrun-plugin</artifactId>
							<version>${version.maven-antrun-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-assembly-plugin</artifactId>
							<version>${version.maven-assembly-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-clean-plugin</artifactId>
							<version>${version.maven-clean-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<version>${version.maven-dependency-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-deploy-plugin</artifactId>
							<version>${version.maven-deploy-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-install-plugin</artifactId>
							<version>${version.maven-install-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-release-plugin</artifactId>
							<version>${version.maven-release-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-site-plugin</artifactId>
							<version>${version.maven-site-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>${version.maven-compiler-plugin}</version>
							<configuration>
								<source>${project.build.jdkVersion}</source>
								<target>${project.build.jdkVersion}</target>
							</configuration>
						</plugin>
						<plugin>
							<!-- Using the eclipse:eclipse goal of the maven-eclipse-plugin creates 
								the files needed by Eclipse for a proper project. Unfortunately the obtained 
								configuration is NOT COMPATIBLE with the use of the Eclipse m2eclipse plugin. -->
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-eclipse-plugin</artifactId>
							<version>${version.maven-eclipse-plugin}</version>
							<configuration>
								<!-- By default we do not want projects found in the workspace to 
									be used instead of proper Maven dependencies. -->
								<useProjectReferences>false</useProjectReferences>
								<!-- The source jar of each dependency will be downloaded and configured. -->
								<downloadSources>true</downloadSources>
								<!-- By default we do not download Javadocs because their path is 
									put in .classpath as an absolute path, which may be different on each workstation. -->
								<downloadJavadocs>false</downloadJavadocs>
								<!-- With this additionalConfig the eclipse:eclipse goal overrides 
									a file in the .settings directory in order to set the encoding of the project 
									for Eclipse. WARNING : if you use this, do not change file encoding settings 
									from inside Eclipse. -->
								<additionalConfig>
									<file>
										<name>.settings/org.eclipse.core.resources.prefs</name>
										<content>
								<![CDATA[encoding/<project>=${project.build.sourceEncoding}${line.separator}eclipse.preferences.version=1${line.separator}]]>
										</content>
									</file>
								</additionalConfig>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-ear-plugin</artifactId>
							<version>${version.maven-ear-plugin}</version>
							<configuration>
								<archive>
								</archive>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-war-plugin</artifactId>
							<version>${version.maven-war-plugin}</version>
							<configuration>
								<archive>
								</archive>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<version>${version.maven-jar-plugin}</version>
							<configuration>
								<archive>
								</archive>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-resources-plugin</artifactId>
							<version>${version.maven-resources-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${version.maven-surefire-plugin}</version>
						</plugin>
					</plugins>
				</pluginManagement>

			</build>
		</profile>
		<profile>
			<id>m2e</id>
			<!-- This profile is only active when the property "m2e.version" is set, 
				which is the case when building in Eclipse with m2e. -->
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<!--This plugin's configuration is used to store Eclipse m2e settings 
							only. It has no influence on the Maven build itself. -->
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.codehaus.mojo</groupId>
												<artifactId>aspectj-maven-plugin</artifactId>
												<versionRange>[1.0,)</versionRange>
												<!-- <version>${version.aspectj-maven-plugin}</version> -->
												<goals>
													<goal>compile</goal>
													<goal>test-compile</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<execute>
													<runOnConfiguration>false</runOnConfiguration>
													<runOnIncremental>true</runOnIncremental>
												</execute>
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

	</profiles>

</project>
